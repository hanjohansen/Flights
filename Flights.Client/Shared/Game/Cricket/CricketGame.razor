@using Flights.Domain.Models
@using Flights.Domain.State

@inject IJSRuntime JSRuntime

<div class="flex flex-row mx-1 h-[750px] overflow-hidden">
    <div class="flex w-[985px] overflow-x-auto">
        @if(CurrentGame != null){
            foreach(var player in CurrentGame.PlayerStates){
            <PlayerStat Player="@player" CurrentPlayerId="@CurrentGame.CurrentPlayerId"/>
            }
        }
    </div>
    <div class="flex w-[380px]">
        <div class="flex flex-row border border-gray-300 rounded-lg mud-elevation-3 bg-white">
            <div class="grid grid-rows-8 gap-8 p-2 mr-6 mt-[25px] ">
                <div class="flex flex-row ml-8">
                    <div class="mt-1 mr-1">
                        <MudIcon Icon="@Icons.Material.Filled.Refresh" Size="Size.Large" Color="Color.Default"/>  
                    </div>                                                       
                    <div class="text-4xl font-bold text-slate-700">
                        @CurrentGame?.Round
                    </div> 
                </div>   
                <CricketScore Caption="15" IconValue="@CurrentGame?.CricketState?.V15"/>
                <CricketScore Caption="16" IconValue="@CurrentGame?.CricketState?.V16"/>
                <CricketScore Caption="17" IconValue="@CurrentGame?.CricketState?.V17"/>
                <CricketScore Caption="18" IconValue="@CurrentGame?.CricketState?.V18"/>
                <CricketScore Caption="19" IconValue="@CurrentGame?.CricketState?.V19"/>
                <CricketScore Caption="20" IconValue="@CurrentGame?.CricketState?.V20"/>
                <CricketScore Caption="B" IconValue="@CurrentGame?.CricketState?.Bulls"/>
            </div>
            <ScoreButtonBoard ReportDart="@ReportScore" RequestRevertDart="@RevertDart" ReportMiss="@ReportMiss"/>
        </div>        
    </div>
</div>

@code{

    [Parameter]
    public GameState? CurrentGame {get;set;}

    [Parameter]
    public EventCallback<StatModel> ReportScore {get;set;}

    [Parameter]
    public EventCallback ReportMiss {get;set;}

    [Parameter]
    public EventCallback RevertDart {get;set;}

    private string GetGridColumnClasses(){
        return $"grid grid-cols-{CurrentGame?.PlayerStates.Count ?? 1}";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender){
        var id = CurrentGame?.CurrentPlayerId;

        if(id == null)
            return;

        await JSRuntime.InvokeVoidAsync("scrollToControl", id.ToString());
    }
}