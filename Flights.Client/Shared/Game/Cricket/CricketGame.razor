@using Flights.Domain.Models
@using Flights.Domain.State
<div class="flex flex-row mx-1 h-[750px] overflow-hidden">
    <div class="flex flex-auto overflow-x-auto">
        @if(CurrentGame != null){
            foreach(var player in CurrentGame.PlayerStates){
            <PlayerStat Player="@player" CurrentPlayerId="@CurrentGame.CurrentPlayerId"/>
            }
        }
    </div>
    <div class="flex shrink">
        <div class="flex flex-row">
            <div class="border border-gray-300 rounded grid grid-rows-7 gap-8 p-2 mr-2 mt-[118px] mud-elevation-3">
                <CricketScore Caption="15" IconValue="@CurrentGame?.CricketState?.V15"/>
                <CricketScore Caption="16" IconValue="@CurrentGame?.CricketState?.V16"/>
                <CricketScore Caption="17" IconValue="@CurrentGame?.CricketState?.V17"/>
                <CricketScore Caption="18" IconValue="@CurrentGame?.CricketState?.V18"/>
                <CricketScore Caption="19" IconValue="@CurrentGame?.CricketState?.V19"/>
                <CricketScore Caption="20" IconValue="@CurrentGame?.CricketState?.V20"/>
                <CricketScore Caption="B" IconValue="@CurrentGame?.CricketState?.Bulls"/>
            </div>
            <ScoreButtonBoard ReportDart="@ReportScore" RequestRevertDart="@RevertDart"/>
        </div>        
    </div>
</div>

@code{

    [Parameter]
    public GameState? CurrentGame {get;set;}

    [Parameter]
    public EventCallback<StatModel> ReportScore {get;set;}

    [Parameter]
    public EventCallback RevertDart {get;set;}

    private string GetGridColumnClasses(){
        return $"grid grid-cols-{CurrentGame.PlayerStates.Count}";
    }
}