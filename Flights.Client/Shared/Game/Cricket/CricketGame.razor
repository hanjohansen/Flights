@inject IJSRuntime JsRuntime

<div class="flex flex-row h-[755px] pl-2 pt-1 pb-1 overflow-y-auto">
    @if(Controls.DisplayType == DisplayType.Viewer){
        <div class="flex flex-none pr-2 pt-[-1] pb-1">
            <div class="flex flex-row px-2 border border-gray-300 rounded-lg mud-elevation-3 bg-white">
                <div class="mr-2 text-gray-600">
                    <div class="flex flex-row mt-15 justify-center">
                        <div class="mt-1 mr-0">
                            <MudIcon Icon="@Icons.Material.Filled.Refresh" Size="Size.Large" Color="Color.Default"/>  
                        </div>                                                       
                        <div class="text-4xl font-bold">
                            @Controls.CurrentGame.Round
                        </div> 
                    </div>  
                    <div class="flex flex-row justify-center">
                        @if(Controls.CurrentGame.PlayerStates.Count > 6){
                            <div class="grid grid-rows-7 pr-2 gap-[28px] mt-8 mx-4">
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.Bulls"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V20"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V19"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V18"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V17"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V16"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V15"/>                                
                            </div>
                        }
                        <div class="flex flex-col justify-items-center mt-10">
                            <div class="text-center text-4xl font-bold mb-12">
                                B
                            </div>
                            @for(var i = 20; i >= 15; i--){
                                <div class="flex text-center text-4xl font-bold mb-12">
                                    @i
                                </div>
                            }
                        </div>
                    </div> 
                </div>
            </div>        
        </div>
    }
    <div class="flex flex-auto overflow-y-auto">
        @foreach (var player in Controls.CurrentGame.PlayerStates)
            {
                <PlayerStat Player="@player" CurrentPlayerId="@Controls.CurrentGame.CurrentPlayerId"/>
            }
    </div>
    @if(Controls.DisplayType == DisplayType.Normal){
        <div class="flex flex-none pr-2 pt-[-1] pb-1">
            <div class="flex flex-row pl-2 border border-gray-300 rounded-lg mud-elevation-3 bg-white">
                <div class="mr-2 text-gray-600">
                    <div class="flex flex-row mt-15 justify-center">
                        <div class="mt-1 mr-0">
                            <MudIcon Icon="@Icons.Material.Filled.Refresh" Size="Size.Large" Color="Color.Default"/>  
                        </div>                                                       
                        <div class="text-4xl font-bold">
                            @Controls.CurrentGame.Round
                        </div> 
                    </div>  
                    <div class="flex flex-row">
                        @if(Controls.CurrentGame.PlayerStates.Count > 5){
                            <div class="grid grid-rows-7 gap-[28px] mt-8 mx-4">
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.Bulls"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V20"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V19"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V18"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V17"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V16"/>
                                <CricketScore IconValue="@Controls.CurrentGame.CricketState?.V15"/>  
                            </div>
                        }
                        <div class="flex flex-col justify-items-center pl-2 mt-10">
                            <div class="text-center text-4xl font-bold mb-12">
                                B
                            </div>
                            @for(var i = 20; i >= 16; i--){
                                <div class="flex text-center text-4xl font-bold mb-12">
                                    @i
                                </div>
                            }     
                            <div class="flex text-center text-4xl font-bold">
                                15
                            </div>                       
                        </div>
                    </div> 
                </div>
                <ScoreButtonBoard/>
            </div>        
        </div>
    }
</div>

@code{
    [CascadingParameter]
    public required GameControls Controls { get; set; }

    private string GetGridColumnClasses(){
        return $"grid grid-cols-{Controls.CurrentGame.PlayerStates.Count}";
    }
}