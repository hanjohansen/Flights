@using Flights.Domain.Entities
@using Flights.Domain.Models
@using Flights.Client.Shared.Game;

@inject NavigationManager NavigationManager

<div class="rounded-md border border-gray-300 mud-elevation-3 ">

    <div class="grid grid-cols-2 gap-2 pt-2 px-2">
        @for(var i = 15; i <= 20; i++){
            <div>
                <ScoreButton Number="@i" ReportScore="@ReportScore"/>
            </div>
        }
        <BullsButton SelectedModifier="@SelectedModifier" ReportScore="@ReportScore"/>
        <div class="col-span-2">
            <div class="w-[80px] ml-[45px]">
                <ScoreButton Number="0" ReportScore="@ReportScore"/>
            </div>
        </div>   
    </div>
    <div class="px-2">        
        <ModifierButton Target="DartModifier.Double"
            Selected="@SelectedModifier"
            ModifierChanged="@ModifierChanged"/>
        <ModifierButton Target="DartModifier.Triple"
            Selected="@SelectedModifier"
            ModifierChanged="@ModifierChanged"/>
    </div>
    <div class="grid grid-cols-2 gap-3 m-2 mt-[60px] h-[80px]">
        <div class="">
            <RevertButton RequestRevertDart="@RequestRevertDart"/>
        </div>      
        <div class="rounded border bg-red-500 text-center py-2 cursor-pointer pt-5"
            @onclick="GoToGames">
            <MudIcon Icon="@Icons.Material.Outlined.Close" Size="Size.Large" Color="Color.Default"/>
        </div>      
    </div>
</div>

@code{
    [Parameter]
    public EventCallback<StatModel> ReportDart {get;set;}

    [Parameter]
    public EventCallback RequestRevertDart {get;set;}

    public DartModifier SelectedModifier {get;set;} = DartModifier.None;

    private void ModifierChanged(DartModifier modifier){
        if(SelectedModifier == modifier){
            SelectedModifier = DartModifier.None;
            return;
        }
        
        SelectedModifier = modifier;
    }

    private async Task ReportScore(int score){
        await ReportDart.InvokeAsync(StatModel.Init(SelectedModifier, score));

        SelectedModifier = DartModifier.None;
    }

    private async Task RequestRevert(){
        await RequestRevertDart.InvokeAsync();
    }

    private void GoToGames(){
        NavigationManager.NavigateTo("/games");
    }
}