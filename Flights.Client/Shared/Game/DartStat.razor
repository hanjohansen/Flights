@using Flights.Domain.Entities
@using Flights.Domain.State

<div class="@GetBustFormatting()">
    <div class="text-3xl">
        @GetDartPointsValue()
    </div>
    <div class="text-gray-400 text-xs">
        @GetDartPointsString()
    </div>
</div>

@code{
    [Parameter]
    public DartState? Dart {get;set;}

    [Parameter]
    public bool IsBust {get;set;}

    private string GetDartPointsString(){
        if(Dart == null)
            return "-";

        var points = "";

        switch(Dart.Modifier){
            case DartModifier.Double:
                points += "D/";
                break;
            case DartModifier.Triple:
                points += "T/";
                break;
        }

        points += Dart.Value;
        return points;
    }

    private string GetDartPointsValue(){
        if(Dart == null)
            return "-";

        var points = 0;

        switch(Dart.Modifier){
            case DartModifier.Double:
                points = 2 * Dart.Value;
                break;
            case DartModifier.Triple:
                points = 3 * Dart.Value;
                break;
            case DartModifier.None:
            default:
                points = Dart.Value;
                break;
        }

        return points.ToString();
    }

    private string GetBustFormatting(){
        var baseClass = "text-center mt-6 ";

        if(IsBust)
            baseClass += "text-red-600";

        return baseClass;
    }
}