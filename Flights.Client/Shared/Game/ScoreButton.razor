<div class="@GetButtonClasses()" @onclick="OnClick">
    <div class="text-2xl prevent-select">
        @if(Caption is not null || ChildContent != null){
            if(Caption is not null)
                @Caption
            if(ChildContent != null)
                @ChildContent
                
        }else{
            @Number
        }
    </div>
</div>

@code{
    [Parameter]
    public string? Caption {get;set;}

    [Parameter]
    public int Number {get;set;}
    
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback<int> ReportScore {get;set;}

    [Parameter] 
    public bool Disabled { get; set; }

    private bool IsPressed {get;set;}

    private async Task OnClick()
    {
        if (Disabled)
            return;
        
        IsPressed = true;
        var timer = new Timer(EndPressed, null, 180, Timeout.Infinite);

        await ReportScore.InvokeAsync(Number);

        await Task.Delay(200);
        await timer.DisposeAsync();
    }  

    private void EndPressed(object? _)
    {
        IsPressed = false;
        InvokeAsync(StateHasChanged);
    }

    private string GetButtonClasses(){
        var baseClasses = "w-[80px] h-[80px] rounded cursor-pointer mud-elevation-5 grid items-center justify-items-center ";

        if(IsPressed)      
            return baseClasses + "bg-green-400 text-white"; 
        
        if(Disabled)
            return baseClasses + "bg-gray-300 text-gray-400"; 

        return baseClasses + "bg-gray-500 text-white";
    }
} 