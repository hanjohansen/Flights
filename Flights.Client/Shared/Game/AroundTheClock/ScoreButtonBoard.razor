@using Flights.Domain.Entities.Game
@using Flights.Domain.Models

@inject NavigationManager NavigationManager

<div class="rounded-md border border-gray-300 mud-elevation-3 bg-white p-2 w-[190px] h-[747px]">
    @if(Controls.DisplayType == DisplayType.Normal){
        <div class="grid justify-items-center my-8">
            <div class="flex flex-row">
                <div class="mt-7 mr-4">
                    <MudIcon Icon="@Icons.Material.Filled.CrisisAlert" Size="Size.Large" Color="Color.Default"/>
                </div>
                <div class="text-8xl font-bold text-gray-600">
                    @Controls.CurrentGame.AroundTheClockState!.CurrentTarget
                </div>
            </div>       
        </div>
        <div class="grid grid-cols-1 gap-2">
            <AroundTheClockScoreButton Caption="Single" Modifier="DartModifier.None"/>
            <AroundTheClockScoreButton Caption="Double" Modifier="DartModifier.Double"/>
            <AroundTheClockScoreButton Caption="Triple" Modifier="DartModifier.Triple" 
                                       Disabled="@(Controls.CurrentGame.AroundTheClockState!.CurrentTarget == 25)"/>
        </div>
        <div class="grid grid-cols-2 gap-2 mt-6 h-[80px]">
            <ScoreButton Number="0" ReportScore="@ReportScore"/>
            <ScoreButton Caption="Miss" Number="0" ReportScore="@ReportNullDart"/>
        </div>
        <div class="pt-6">
            <AirhornButton MenuPosX="775" MenuPosY="220"/>
        </div>
        <div class="grid grid-cols-2 gap-2 mt-[25px] h-[80px]">
            <div class="">
                <RevertButton/>
            </div>      
            <div class="rounded bg-red-500 text-center cursor-pointer pt-[22px] mud-elevation-5"
                @onclick="GoToGames">
                <MudIcon Icon="@Icons.Material.Outlined.Close" Size="Size.Large" Color="Color.Default"/>
            </div>      
        </div>
    }
    @if(Controls.DisplayType == DisplayType.Viewer){
        <div class="grid justify-items-center items-center my-8">
            <div class="flex flex-row mt-[300px]">
                <div class="mt-7 mr-4">
                    <MudIcon Icon="@Icons.Material.Filled.CrisisAlert" Size="Size.Large" Color="Color.Default"/>
                </div>
                <div class="text-8xl font-bold text-gray-600">
                    @Controls.CurrentGame.AroundTheClockState!.CurrentTarget
                </div>
            </div>       
        </div>
    }
</div>

@code{
    [CascadingParameter]
    public required GameControls Controls { get; set; }
    
    private async Task ReportScore(int score)
    {
        if (Controls.ReportScore == null)
            return;
            
        await Controls.ReportScore(StatModel.Init(DartModifier.None, score));
    }

    private async Task ReportNullDart(int score)
    {
        if (Controls.ReportNullDart == null)
            return;
        
        await Controls.ReportNullDart();
    }

    private void GoToGames(){
        if (Controls.CurrentGame.TournamentId != null)
            NavigationManager.NavigateTo("/tournament/" + Controls.CurrentGame.TournamentId);
        else
            NavigationManager.NavigateTo("/games");
    }
}